% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/abstract_design.R
\name{SeqDesign}
\alias{SeqDesign}
\title{A Sequential Design}
\description{
An R6 Class encapsulating the data and functionality for a sequential experimental design.
This class takes care of data intialization and sequential assignments. The class object
should be saved securely after each assignment e.g. on an encrypted cloud server.
}
\examples{

## ------------------------------------------------
## Method `SeqDesign$add_subject_to_experiment_and_assign`
## ------------------------------------------------

seq_des = SeqDesignCRD$new(n = 100, p = 10, design = "CRD", response_type = "continuous")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])


## ------------------------------------------------
## Method `SeqDesign$print_current_subject_assignment`
## ------------------------------------------------

seq_des = SeqDesign$new(n = 100, p = 10, design = "CRD", response_type = "continuous")

seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$print_current_subject_assignment()


## ------------------------------------------------
## Method `SeqDesign$add_subject_response`
## ------------------------------------------------

seq_des = SeqDesign$new(n = 100, p = 10, design = "KK21", response_type = "continuous")

seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])

seq_des$add_subject_response(4.71, 1)
#works
seq_des$add_subject_response(4.71, 2)
#fails


## ------------------------------------------------
## Method `SeqDesign$add_all_subject_responses`
## ------------------------------------------------

seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD", response_type = "continuous")

seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])

seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))
				

## ------------------------------------------------
## Method `SeqDesign$add_all_subject_assignments`
## ------------------------------------------------

seq_des = SeqDesignCRD$new(response_type = "continuous")

seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])

seq_des$add_all_subject_assignments(c(0, 1, 0, 1, 0, 1))
				

## ------------------------------------------------
## Method `SeqDesign$is_fixed_sample_size`
## ------------------------------------------------

seq_des = SeqDesignCRD$new(n = 6, response_type = "continuous")
seq_des$is_fixed_sample_size() #returns TRUE
seq_des = SeqDesignCRD$new(response_type = "continuous")
seq_des$is_fixed_sample_size() #returns FALSE


## ------------------------------------------------
## Method `SeqDesign$assert_experiment_completed`
## ------------------------------------------------

seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD", response_type = "continuous")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])

#if run, it would throw an error since all of the covariate vectors are not yet recorded
#seq_des$assert_experiment_completed() 

seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])

#if run, it would throw an error since the responses are not yet recorded
#seq_des$assert_experiment_completed() 

seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des$assert_experiment_completed() #no response means the assert is true

## ------------------------------------------------
## Method `SeqDesign$check_experiment_completed`
## ------------------------------------------------

seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD", response_type = "continuous")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])

#returns FALSE since all of the covariate vectors are not yet recorded
seq_des$check_experiment_completed() 

seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])

#returns FALSE since the responses are not yet recorded
seq_des$check_experiment_completed() 

seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des$check_experiment_completed() #returns TRUE


## ------------------------------------------------
## Method `SeqDesign$assert_even_allocation`
## ------------------------------------------------

seq_des = SeqDesignCRD$new(n = 6, p = 10, design = "CRD", response_type = "continuous")
seq_des$assert_even_allocation() #returns TRUE
seq_des = SeqDesignCRD$new(n = 6, p = 10, prob_T = 0.4, design = "CRD", response_type = "continuous")
seq_des$assert_even_allocation() #returns FALSE

## ------------------------------------------------
## Method `SeqDesign$assert_fixed_sample`
## ------------------------------------------------

seq_des = SeqDesignCRD$new(response_type = "continuous", n = 6)
seq_des$assert_fixed_sample() #returns TRUE
seq_des = SeqDesignCRD$new(response_type = "continuous")
seq_des$assert_fixed_sample() #returns FALSE

## ------------------------------------------------
## Method `SeqDesign$any_censoring`
## ------------------------------------------------

seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD", response_type = "continuous")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])

#returns FALSE since all of the covariate vectors are not yet recorded
seq_des$check_experiment_completed() 

seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])

#returns FALSE since the responses are not yet recorded
seq_des$check_experiment_completed() 

seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des$any_censoring() #returns FALSE
			
Get t

}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SeqDesign-new}{\code{SeqDesign$new()}}
\item \href{#method-SeqDesign-add_subject_to_experiment_and_assign}{\code{SeqDesign$add_subject_to_experiment_and_assign()}}
\item \href{#method-SeqDesign-print_current_subject_assignment}{\code{SeqDesign$print_current_subject_assignment()}}
\item \href{#method-SeqDesign-add_subject_response}{\code{SeqDesign$add_subject_response()}}
\item \href{#method-SeqDesign-add_all_subject_responses}{\code{SeqDesign$add_all_subject_responses()}}
\item \href{#method-SeqDesign-add_all_subject_assignments}{\code{SeqDesign$add_all_subject_assignments()}}
\item \href{#method-SeqDesign-is_fixed_sample_size}{\code{SeqDesign$is_fixed_sample_size()}}
\item \href{#method-SeqDesign-assert_experiment_completed}{\code{SeqDesign$assert_experiment_completed()}}
\item \href{#method-SeqDesign-check_experiment_completed}{\code{SeqDesign$check_experiment_completed()}}
\item \href{#method-SeqDesign-assert_even_allocation}{\code{SeqDesign$assert_even_allocation()}}
\item \href{#method-SeqDesign-assert_fixed_sample}{\code{SeqDesign$assert_fixed_sample()}}
\item \href{#method-SeqDesign-any_censoring}{\code{SeqDesign$any_censoring()}}
\item \href{#method-SeqDesign-get_t}{\code{SeqDesign$get_t()}}
\item \href{#method-SeqDesign-get_X_raw}{\code{SeqDesign$get_X_raw()}}
\item \href{#method-SeqDesign-get_X_imp}{\code{SeqDesign$get_X_imp()}}
\item \href{#method-SeqDesign-get_y}{\code{SeqDesign$get_y()}}
\item \href{#method-SeqDesign-get_w}{\code{SeqDesign$get_w()}}
\item \href{#method-SeqDesign-get_n}{\code{SeqDesign$get_n()}}
\item \href{#method-SeqDesign-get_dead}{\code{SeqDesign$get_dead()}}
\item \href{#method-SeqDesign-get_prob_T}{\code{SeqDesign$get_prob_T()}}
\item \href{#method-SeqDesign-get_response_type}{\code{SeqDesign$get_response_type()}}
\item \href{#method-SeqDesign-get_covariate_weights}{\code{SeqDesign$get_covariate_weights()}}
\item \href{#method-SeqDesign-clone}{\code{SeqDesign$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-new"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-new}{}}}
\subsection{Method \code{new()}}{
Initialize a sequential experimental design
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$new(
  response_type = "continuous",
  prob_T = 0.5,
  include_is_missing_as_a_new_feature = TRUE,
  n = NULL,
  verbose = FALSE,
  thin = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{response_type}}{The data type of response values which must be one of the following: 
"continuous" (the default),  
"incidence", 
"proportion", 
"count", 
"survival".
This package will enforce that all added responses via the \code{add_subject_response} method will be
of the appropriate type.}

\item{\code{prob_T}}{The probability of the treatment assignment. This defaults to \code{0.5}.}

\item{\code{include_is_missing_as_a_new_feature}}{If missing data is present in a variable, should we include another dummy variable for its
missingness in addition to imputing its value? If the feature is type factor, instead of creating
a new column, we allow missingness to be its own level. The default is \code{TRUE}.}

\item{\code{n}}{The sample size (if fixed). Default is \code{NULL} for not fixed.}

\item{\code{verbose}}{A flag indicating whether messages should be displayed to the user. Default is \code{TRUE}.}

\item{\code{thin}}{For internal use only. Do not specify. You can thank R6's single constructor-only for this coding noise.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `SeqDesign` object of the specific type
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-add_subject_to_experiment_and_assign"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-add_subject_to_experiment_and_assign}{}}}
\subsection{Method \code{add_subject_to_experiment_and_assign()}}{
Add subject-specific measurements for the next subject entrant and return this new subject's treatment assignment
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$add_subject_to_experiment_and_assign(x_new, allow_new_cols = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x_new}}{A row of the data frame corresponding to the new subject to be added (must be type data.table).}

\item{\code{allow_new_cols}}{Should we allow new/different features than previously seen in previous subjects in the 
new subject's covariates? Default is \code{TRUE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{seq_des = SeqDesignCRD$new(n = 100, p = 10, design = "CRD", response_type = "continuous")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-print_current_subject_assignment"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-print_current_subject_assignment}{}}}
\subsection{Method \code{print_current_subject_assignment()}}{
Prints the current assignment to screen. Should be called after \code{add_subject_to_experiment_and_assign}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$print_current_subject_assignment()}\if{html}{\out{</div>}}
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{seq_des = SeqDesign$new(n = 100, p = 10, design = "CRD", response_type = "continuous")

seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$print_current_subject_assignment()

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-add_subject_response"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-add_subject_response}{}}}
\subsection{Method \code{add_subject_response()}}{
For CARA designs, add subject response for the a subject
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$add_subject_response(t, y, dead = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{t}}{The subject index for which to attach a response (beginning with 1, ending with n). You cannot add responses
for subjects that have not yet been added to the experiment via the \code{add_subject_to_experiment_and_assign} method.}

\item{\code{y}}{The response value which must be appropriate for the response_type.}

\item{\code{dead}}{If the response is censored, enter 0 for this value. This is only necessary to specify for response type
"survival" otherwise do not specify this argument (as it will default to 1).}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{seq_des = SeqDesign$new(n = 100, p = 10, design = "KK21", response_type = "continuous")

seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])

seq_des$add_subject_response(4.71, 1)
#works
seq_des$add_subject_response(4.71, 2)
#fails

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-add_all_subject_responses"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-add_all_subject_responses}{}}}
\subsection{Method \code{add_all_subject_responses()}}{
For non-CARA designs, add all subject responses (usually done at the end of the study)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$add_all_subject_responses(ys, deads = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ys}}{The responses as a numeric vector of length n}

\item{\code{deads}}{The binary vector of length n where 1 indicates the the subject 
is dead (survival value is uncensored) and 0 indicates the subject is
alive (survival value is censored). This is only necessary for response type
 "survival" otherwise do not specify and the value 
will default to 1.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD", response_type = "continuous")

seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])

seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))
				
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-add_all_subject_assignments"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-add_all_subject_assignments}{}}}
\subsection{Method \code{add_all_subject_assignments()}}{
For those who wish to use this package for analysis on already-completed experimental data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$add_all_subject_assignments(w)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{w}}{The binary responses as a numeric vector of length equal to the number of subjects in the study}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{seq_des = SeqDesignCRD$new(response_type = "continuous")

seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])

seq_des$add_all_subject_assignments(c(0, 1, 0, 1, 0, 1))
				
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-is_fixed_sample_size"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-is_fixed_sample_size}{}}}
\subsection{Method \code{is_fixed_sample_size()}}{
Check if this design was initialized with a fixed sample size n
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$is_fixed_sample_size()}\if{html}{\out{</div>}}
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{seq_des = SeqDesignCRD$new(n = 6, response_type = "continuous")
seq_des$is_fixed_sample_size() #returns TRUE
seq_des = SeqDesignCRD$new(response_type = "continuous")
seq_des$is_fixed_sample_size() #returns FALSE

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-assert_experiment_completed"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-assert_experiment_completed}{}}}
\subsection{Method \code{assert_experiment_completed()}}{
Asserts if the experiment is completed (all n assignments are assigned
in the w vector and all n responses in the y vector are recorded), i.e. throws 
descriptive error if the experiment is incomplete.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$assert_experiment_completed()}\if{html}{\out{</div>}}
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD", response_type = "continuous")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])

#if run, it would throw an error since all of the covariate vectors are not yet recorded
#seq_des$assert_experiment_completed() 

seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])

#if run, it would throw an error since the responses are not yet recorded
#seq_des$assert_experiment_completed() 

seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des$assert_experiment_completed() #no response means the assert is true
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-check_experiment_completed"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-check_experiment_completed}{}}}
\subsection{Method \code{check_experiment_completed()}}{
Checks if the experiment is completed (all n assignments are assigned
in the w vector and all n responses in the y vector are recorded).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$check_experiment_completed()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if experiment is complete, \code{FALSE} otherwise.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD", response_type = "continuous")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])

#returns FALSE since all of the covariate vectors are not yet recorded
seq_des$check_experiment_completed() 

seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])

#returns FALSE since the responses are not yet recorded
seq_des$check_experiment_completed() 

seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des$check_experiment_completed() #returns TRUE

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-assert_even_allocation"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-assert_even_allocation}{}}}
\subsection{Method \code{assert_even_allocation()}}{
Checks if the experiment has a 50-50 allocation to treatment and control
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$assert_even_allocation()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if 50-50, \code{FALSE} otherwise.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{seq_des = SeqDesignCRD$new(n = 6, p = 10, design = "CRD", response_type = "continuous")
seq_des$assert_even_allocation() #returns TRUE
seq_des = SeqDesignCRD$new(n = 6, p = 10, prob_T = 0.4, design = "CRD", response_type = "continuous")
seq_des$assert_even_allocation() #returns FALSE
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-assert_fixed_sample"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-assert_fixed_sample}{}}}
\subsection{Method \code{assert_fixed_sample()}}{
Checks if the experiment has a 50-50 allocation to treatment and control
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$assert_fixed_sample()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if 50-50, \code{FALSE} otherwise.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{seq_des = SeqDesignCRD$new(response_type = "continuous", n = 6)
seq_des$assert_fixed_sample() #returns TRUE
seq_des = SeqDesignCRD$new(response_type = "continuous")
seq_des$assert_fixed_sample() #returns FALSE
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-any_censoring"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-any_censoring}{}}}
\subsection{Method \code{any_censoring()}}{
Checks if the experiment has any censored responses
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$any_censoring()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if there are any censored responses, \code{FALSE} otherwise.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD", response_type = "continuous")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])

#returns FALSE since all of the covariate vectors are not yet recorded
seq_des$check_experiment_completed() 

seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])

#returns FALSE since the responses are not yet recorded
seq_des$check_experiment_completed() 

seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des$any_censoring() #returns FALSE
			
Get t

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-get_t"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-get_t}{}}}
\subsection{Method \code{get_t()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$get_t()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The current number of subjects in this sequential experiment (begins at zero).					
			
Get raw X information
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-get_X_raw"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-get_X_raw}{}}}
\subsection{Method \code{get_X_raw()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$get_X_raw()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data frame (data.table object) of subject data with number of rows n (the number of subjects) and number of 
					columns p (the number of characteristics measured for each subject). This data frame is filled in
					sequentially by the experimenter and thus will have data present for rows 1...t (i.e. the number of subjects in the
					experiment currently) but otherwise will be missing.					
Get imputed X information
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-get_X_imp"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-get_X_imp}{}}}
\subsection{Method \code{get_X_imp()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$get_X_imp()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Same as \code{Xraw} except with imputations for missing values (if necessary) and deletions of linearly dependent columns					
Get y
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-get_y"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-get_y}{}}}
\subsection{Method \code{get_y()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$get_y()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A numeric vector of subject responses with number of entries n (the number of subjects). During
					the KK21 designs the experimenter fills these values in when they are measured.
					For non-KK21 designs, this vector can be set at anytime (but must be set before inference is desired).				
Get w
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-get_w"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-get_w}{}}}
\subsection{Method \code{get_w()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$get_w()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A binary vector of subject assignments with number of entries n (the number of subjects). 
					This vector is filled in sequentially by this package (similar to X) and will have assignments present for
					entries 1...t (i.e. the number of subjects in the experiment currently) but otherwise will be missing.	
Get n, the sample size

If n is fixed, it returns n, if n is not fixed, it returns the current number of subjects, t
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-get_n"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-get_n}{}}}
\subsection{Method \code{get_n()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$get_n()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The number of subjects
Get dead
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-get_dead"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-get_dead}{}}}
\subsection{Method \code{get_dead()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$get_dead()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A binary vector of whether the subject is dead with number of entries n (the number of subjects). This 
					vector is filled in only for \code{response_type} values "survival". The value
					of 1 indicates uncensored (as the subject died) and a value 0 indicates the real survival value is censored 
					as the subject is still alive at the time of measurement. This follows the same convention as the \code{event} 
					argument in the canonical \code{survival} package in the constructor \code{survival::Surv}. During
					the KK21 designs the experimenter fills these values in when they are measured.
					For non-KK21 designs, this vector can be set at anytime (but must be set before inference is desired).				
Get probability of treatment
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-get_prob_T"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-get_prob_T}{}}}
\subsection{Method \code{get_prob_T()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$get_prob_T()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The experimenter-specified probability a subject becomes wtated to the treatment arm.		
Get response type
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-get_response_type"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-get_response_type}{}}}
\subsection{Method \code{get_response_type()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$get_response_type()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The experimenter-specified response type which is one of the following: 
							"continuous", 
							"incidence", 
							"proportion", 
							"count", 
							"survival"			
Get covariate weights
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-get_covariate_weights"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-get_covariate_weights}{}}}
\subsection{Method \code{get_covariate_weights()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$get_covariate_weights()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
For KK21 designs, the running values of the weights for each covariate.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesign-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesign-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesign$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
